This program can be used to create intermediate views for 2.5D cartoons.
This follows the algorithm laid out by Alec Rivers in his paper 2.5D Cartoon
Models.

Usage:
	python cartoon.py [inputfile] [outputfile] [position]

where the inputfile is of the format:

numKeyViews
filename0
x0
y0
z0
filename1
x1
y1
z1
....
filenameN
xN
yN
zN

and position is the relative position from which the image should be 
created. The format for specifying the position is xCoor_yCoor_zCoor.

To create all axis views and midviews the program can be run through
the testbench by saying

	python testbench.py [inputfile] [OutputfileBase]

This will output files in the format OutputfileBaseXCoorYCoorZCoor.svg.

Assumptions:
This program makes the following assumptions about the images for the
key views:
    - all strokes appear in all images
    - all stroke are paths
    - all strokes have the same number of control points across views
    - all strokes are assigned id attributes which are consistent across
      views
    
Provided Test Files:
The following files are provided for testing:
    inputFile 	    imageFile
    input.txt	    face1.svg
    		    face2.svg
		    face3.svg

    circleInput.txt circle1.svg
    		    circle2.svg
		    circle3.svg


Rubric: 
	Week 1: displaying work and creating starting images.
	     - I was able to output new svg files to see the created images and 
	       I created two sets of starting images, face and circle. Other images
	       could be created as well.
	Week 2: anchor points and z-ordering
	     - Anchor points and z-ordering are correctly calculated
	Week 3: implementation of interpolation
	     - The interpolation assumes that all strokes have the same number of
	       control points across all strokes.
	     - There are also some issues with images being flipped when y is -1
	Week 4: creating animations and debugging
	     - I did not actually create any animations but one could easily be created
	       by outputing a serie of images from adjacent views.
	     - I spent most of the last week and a half debugging but there are still
	       some small issues I couldn't work out.

